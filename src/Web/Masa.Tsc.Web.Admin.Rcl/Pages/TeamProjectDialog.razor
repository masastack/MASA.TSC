@inherits TscComponentBase

@if (_team != null)
{
    <SSheetDialog @bind-Value=Visible Title="@_team.CurrentProject.Name">
        <MCard Style="background-color:#F0F3FA;border-top-left-radius: 20px;border-top-right-radius: 20px;" Class="full-height">
            <MRow NoGutters Class="full-height">
                <MCol Style="background-color:white;border-top-left-radius: 20px;" Cols="2" Class="d-flex flex-column justify-space-between pa-6 pb-8">
                    <ProjectDetail Value=@_team.CurrentProject></ProjectDetail>
                    <TeamDetail Value=@_team></TeamDetail>
                </MCol>
                <MCol Cols="10" Class="pa-8">
                    <SearchBar AppId=@_appId Apps=@_team.CurrentProject.Apps OnSearch="async (data)=>{ if(_projectCharts!=null) await  _projectCharts.OnLoadDataAsyc(data);}"></SearchBar>
                    <ProjectCharts Class="mt-2" @ref="_projectCharts"/>
                </MCol>
            </MRow>
        </MCard>
    </SSheetDialog>
}

@code {
    [Parameter]
    public bool Visible { get; set; }

    [Parameter]
    public EventCallback<bool> VisibleChanged { get; set; }

    public string _projectId { get; set; }
    public Guid _teamId { get; set; }
    private string _appId = string.Empty;
    private TeamDto _team = default!;
    private ProjectCharts _projectCharts = new();

    public async Task RefrshDataASync(Guid teamId, string projectId)
    {
        Visible = true;
        if (!string.IsNullOrEmpty(projectId) && teamId != Guid.Empty && _projectId != projectId && _teamId != teamId)
        {
            _team = await ApiCaller.TeamService.GetTeamAsync(teamId, projectId);
            _projectId = projectId;
            _teamId = teamId;
        }
        if (_team.CurrentProject != null && _team.CurrentProject.Apps != null && _team.CurrentProject.Apps.Any())
        {
            var first = _team.CurrentProject.Apps.First();
            if (first.Identity != _appId)
                _appId = first.Identity;
        }
        StateHasChanged();
    }
}
