@page "/dashboard/configuration/{dashboardId}"
@page "/dashboard/configuration/{dashboardId}/{serviceName}"
@page "/dashboard/configuration/{dashboardId}/{serviceName}/{relationName}"
@page "/dashboard/configuration/record/{dashboardId}"
@page "/dashboard/configuration/record/{dashboardId}/{serviceName}"
@page "/dashboard/configuration/record/{dashboardId}/{serviceName}/{relationName}"
@inherits TscComponentBase

<PageTitle>@T("Configure Dashboard")</PageTitle>

<AutoHeight Id="@_scrollElementId" Overflow AutoStyle="max-height: calc(100vh - 185px);height: 900px">
    <HeaderContent>
        <div class="d-flex mb-6">
            <ServiceRelation Service="@ServiceName" 
                             ServiceChanged="ServiceNameChanged"
                             Relation="@RelationName"
                             RelationChanged="RelationNameChanged"
                             ModelType="ConfigurationRecord.ModelType" />
@*            @if (ConfigurationRecord.ShowServiceCompontent)
            {
                <ServiceAutoComplete Value="@ServiceName" ValueChanged=ServiceNameChange FillBackground=false Class="mr-6 my-auto" Style="max-width:300px !important;width:300px;" Metric />
                @if (ConfigurationRecord.Model=="ServiceInstance")
                {
                    <EndpintAutoComplete Value="@InstanceName" Service="@ServiceName" ValueChanged=InstanceChange Class="mr-6 my-auto" Instance Style="max-width:300px !important;width:300px;" />
                }
                @if (ConfigurationRecord.Model == "Endpoint")
                {
                    <EndpintAutoComplete Value="@EndpointName" Service="@ServiceName" ValueChanged=EndpointChange Class="mr-6 my-auto" Style="max-width:300px !important;width:300px;" />
                }
            }*@
            <MSpacer />
            <DateTimeRangeToolbar Class="mr-6 my-auto" @bind-DefaultQuickRange="_defaultValue"
                                  StartTimeLimit="(val,end)=>val<=end&& val.AddDays(1)>=end"
                                  EndTimeLimit="(val,start)=>val>=start&&val.AddDays(-1)<=start"
                                  OnUpdate="OnDateTimeUpdateAsync"
                                  OnAutoUpdate="OnAutoDateTimeUpdateAsync" />
            <MTooltip Top>
                <ActivatorContent>
                    <div @attributes="@context.Attrs" @onclick="SwitchEdit" class="mr-6 my-auto d-flex">
                        <MSwitch Value="ConfigurationRecord.IsEdit" Readonly TValue="bool" LeftText="@T("V")" RightText="@T("E")" HideDetails="@("auto")" TrackColor="white" Color="primary" Class="my-auto" />
                    </div>
                </ActivatorContent>
                <ChildContent>
                    @if (ConfigurationRecord.IsEdit)
                    {
                        <span>@T("In edit mode, click to switch to view mode")</span>
                    }
                    else
                    {
                        <span>@T("In view mode, click to switch to edit mode")</span>
                    }
                </ChildContent>
            </MTooltip>
            <SButton Icon Class="mr-3 my-auto" Style="@(ConfigurationRecord.IsEdit ?"":"visibility:hidden;")" OnClick="AddPanel">
                <SIcon Tooltip="@T("Add Panel")" Size=28>@IconConstants.Chart</SIcon>
            </SButton>
            <SButton Icon Class="my-auto" Style="@(ConfigurationRecord.IsEdit ?"":"visibility:hidden;")" OnClick="SaveAsync">
                <SIcon Tooltip="@T("Save")" Size=28>@IconConstants.Save</SIcon>
            </SButton>
        </div>
    </HeaderContent>
    <AutoHeightContent>
        <DefaultCard Id="@_contentElementId" Style="min-height: calc(100vh - 185px);">
            <CascadingValue Value="ConfigurationRecord.IsEdit">
                <CascadingValue Value="PanelGrids" IsFixed>
                    <CascadingValue Value="ConfigurationRecord">
                        @if (ConfigurationRecord.RenderReady)
                        {
                            <PanelGrids Panels="ConfigurationRecord.Panels" />
                        }
                        else
                        {
                            PanelGrids.RemoveAll(item => item.ParentPanel is null);
                        }
                    </CascadingValue>
                </CascadingValue>
            </CascadingValue>
        </DefaultCard>
    </AutoHeightContent>
</AutoHeight>