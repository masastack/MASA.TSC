@page "/dashboard/configuration/chart/{panelId}"
@inherits TscComponentBase

<ChartPanelConfiguration GetMetrics=GetMetricsAsync Value="Panel" />

@code {
    [Inject]
    ConfigurationRecord ConfigurationRecord { get; set; }

    [Parameter]
    public string? PanelId { get; set; }

    UpsertChartPanelDto Panel { get; set; }

    protected override void OnInitialized()
    {
        Panel = FindPanel(ConfigurationRecord.Panels) as UpsertChartPanelDto ?? throw new UserFriendlyException("find panel error");
    }

    UpsertPanelDto? FindPanel(List<UpsertPanelDto> panels)
    {
        foreach (var panel in panels)
        {
            if (panel.Id == Guid.Parse(PanelId!))
            {
                return panel;
            }
            if (panel.ChildPanels.Any())
            {
                var data = FindPanel(panel.ChildPanels);
                if (data is not null) return data;
            }
        }

        return default;
    }

    async Task<List<QueryResultDataResponse>> GetMetricsAsync()
    {
        return await base.ApiCaller.MetricService.GetMultiRangeAsync(new RequestMultiQueryRangeDto()
        {
           Start = ConfigurationRecord.StartTime.UtcDateTime,
           End = ConfigurationRecord.EndTime.UtcDateTime,
           ServiceName = ConfigurationRecord.AppName,
           Step = "5s",
           MetricNames = Panel.Metrics.Select(item => item.Name).ToList()
        });
    }
}
