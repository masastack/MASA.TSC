@page "/dashboard/configuration/chart/{panelId}/{dashboardId}/{serviceName?}/{instanceName?}/{endpointName?}"
@inherits TscComponentBase

<PageTitle>@T("Configure Chart")</PageTitle>

@if (Panel is not null)
{
    <ChartPanelConfiguration Value="Panel" ConfigurationRecord="ConfigurationRecord" />
}

@code {
    [Inject]
    DashboardConfigurationRecord ConfigurationRecord { get; set; }

    [Inject]
    public NavigationManager NavigationManager { get; set; }

    [Parameter]
    public string? DashboardId { get; set; }

    [Parameter]
    public string? ServiceName { get; set; }

    [Parameter]
    public string? InstanceName { get; set; }

    [Parameter]
    public string? EndpointName { get; set; }

    [Parameter]
    public string PanelId { get; set; }

    UpsertChartPanelDto? Panel { get; set; }

    protected override void OnInitialized()
    {
        ConfigurationRecord.Service = ServiceName;
        ConfigurationRecord.Instance = InstanceName;
        ConfigurationRecord.Endpoint = EndpointName;
    }

    protected override async Task OnParametersSetAsync()
    {     
        if (string.IsNullOrEmpty(DashboardId) is false && ConfigurationRecord.DashboardId != DashboardId)
        {
            ConfigurationRecord.DashboardId = DashboardId;
            await ConfigurationRecord.BindPanelsAsync(ApiCaller);
        }
        if (string.IsNullOrEmpty(PanelId) is false)
        {
            ConfigurationRecord.PanelId = PanelId;
            Panel = FindPanel(ConfigurationRecord.Panels) as UpsertChartPanelDto ?? throw new UserFriendlyException(T("Find panel error"));
        }
    }

    UpsertPanelDto? FindPanel(List<UpsertPanelDto> panels)
    {
        foreach (var panel in panels)
        {
            if (panel.Id == Guid.Parse(PanelId!))
            {
                return panel;
            }
            if (panel.ChildPanels.Any())
            {
                var data = FindPanel(panel.ChildPanels);
                if (data is not null) return data;
            }
        }

        return default;
    }
}
