@inherits TscComponentBase

<Gridstack Items="Panels" Id="@(ParentPanel is null ? null : ParentPanel.Id.ToString())" Readonly="!IsEdit" Class="@Class" ItemStyle="@("background-color:white;border: 1px solid #F0F3FA;border-radius: 12px;position:absolute;overflow:hidden;"+(IsEdit?"cursor: move;":""))">
    <ItemContent>
        @if (IsEdit && context.PanelType != PanelTypes.Tabs)
        {
            <div style="height:48px;" class="d-flex">
                <MSpacer />
                <MMenu OpenOnHover OffsetY>
                <ActivatorContent Context="menuContext">
                    <SButton Icon Class="my-auto" @attributes="@menuContext.Attrs">
                        <SIcon Size="24">@IconConstants.More</SIcon>
                        </SButton>
                    </ActivatorContent>
                    <ChildContent>
                        <MList>
                        @if (context.PanelType == PanelTypes.Chart)
                            {
                                <MListItem OnClick="() => ConfigurationChartPanel(context)">
                                    <MListItemTitle>
                                        @I18n.Dashboard("Edit Panel")
                                    </MListItemTitle>
                                </MListItem>
                            }
                            <MListItem OnClick="() => RemovePanel(context)">
                                <MListItemTitle>
                                    @I18n.Dashboard("Remove Panel")
                                </MListItemTitle>
                            </MListItem>
                        </MList>
                    </ChildContent>
                </MMenu>
            </div>
        }
        <div style="@(context.PanelType==PanelTypes.Chart?"":"overflow:auto;") @(IsEdit?"height:calc(100% - 50px);":"height:calc(100%);")">
            @switch (context.PanelType)
            {
                case PanelTypes.Tabs:
                    <TabsPanel Panel="context as UpsertTabsPanelDto">
                        <HeaderRightContent>
                            <MMenu OpenOnHover OffsetY>
                            <ActivatorContent Context="menuContext">
                                <SButton Icon Class="my-auto" @attributes="@menuContext.Attrs">
                                    <SIcon Size="24">@IconConstants.More</SIcon>
                                    </SButton>
                                </ActivatorContent>
                                <ChildContent>
                                    <MList>
                                        <MListItem OnClick="async () =>AddChildPanel(context as UpsertTabsPanelDto)">
                                            <MListItemTitle>
                                                @I18n.Dashboard("Add Panel")
                                            </MListItemTitle>
                                        </MListItem>
                                        <MListItem OnClick="() => RemovePanel(context)">
                                            <MListItemTitle>
                                                @I18n.Dashboard("Remove Panel")
                                            </MListItemTitle>
                                        </MListItem>
                                    </MList>
                                </ChildContent>
                            </MMenu>
                        </HeaderRightContent>
                    </TabsPanel>
                    break;
                case PanelTypes.Text:
                    <TextPanel Value=context />
                    break;
                case PanelTypes.Trace:
                    <TscTrace />
                    break;
                case PanelTypes.Topology:
                    <TopologyPanel />
                    break;
                case PanelTypes.Chart or PanelTypes.Table:
                    <ChartPanel Value="context as UpsertChartPanelDto" />
                    break;
                case PanelTypes.Log:
                    <LogPanel />
                    break;
                case PanelTypes.Select:
                    <PanelSelect PanelId="context.Id" OnSelect="ReplacePanel" />
                    break;
                default:
                    break;
            }
        </div>
    </ItemContent>
</Gridstack>