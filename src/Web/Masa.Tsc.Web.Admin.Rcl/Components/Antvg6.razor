@inject IJSRuntime JS
@implements IAsyncDisposable

<div style="height:100%;width:100%;" @ref="_elementRef"></div>

@code {
    private ElementReference? _elementRef;
    private IJSObjectReference? _helper;

    [Parameter]
    public object? Data { get; set; }

    [Parameter]
    public Object? Option { get; set; }

    bool HasRendered { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        if (_helper is not null && HasRendered is false && Data is not null && Option is not null)
        {
            await _helper.InvokeVoidAsync("render", _elementRef, Option, Data);
            HasRendered = true;
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(firstRender)
        {
            _helper = await JS.InvokeAsync<IJSObjectReference>("import", "./_content/Masa.Tsc.Web.Admin.Rcl/js/antv-g6.js");
        }
    }

    public async ValueTask DisposeAsync()
    {
        if (_helper is not null)
            await _helper.DisposeAsync();
    }
}
