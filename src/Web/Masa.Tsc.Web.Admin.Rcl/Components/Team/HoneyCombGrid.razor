@namespace Masa.Tsc.Web.Admin.Rcl.Components
@typeparam TItem
@inherits TscComponentBase

<ul class="m-honeycomb">
    @foreach (var item in Data)
    {
        <MMenu OpenOnHover Top OffsetY ContentClass="m-honeycomb-cell__tip">
            <ActivatorContent>
                <li @attributes="@context.Attrs" class="@SplicingCellClass()" @onclick="()=>OnClickHandler(item)" style="@(OnItemClick.HasDelegate?"cursor:pointer;":"")">
                    @if (CellBack != null)
                    {
                        <div class="m-honeycomb-cell__back" style="@CellBackStyle.Invoke(item)">
                            @CellBack(item)
                        </div>
                    }
                    @if (CellFront != null)
                    {
                        <div class="m-honeycomb-cell__front">
                            @CellFront(item)
                        </div>
                    }
                    @if (HasBorder)
                    {
                        <div class="m-honeycomb-cell__border" style="background-color:@CellBorderColor(item)"></div>
                    }
                </li>
            </ActivatorContent>
            <ChildContent>
                @if (CellHoverTip != null)
                {
                    @CellHoverTip(item)
                }
            </ChildContent>
        </MMenu>
    }
    <li class="m-honeycomb-cell m-honeycomb__placeholder"></li>
</ul>

@code {
    [Parameter]
    public RenderFragment<TItem>? CellBack { get; set; }

    [Parameter]
    public RenderFragment<TItem>? CellFront { get; set; }

    [Parameter]
    public RenderFragment<TItem>? CellHoverTip { get; set; }

    [Parameter]
    public List<TItem> Data { get; set; } = new();

    [Parameter]
    public bool HasBorder { get; set; } = true;

    [Parameter]
    public Func<TItem, string> CellBackStyle { get; set; }

    [Parameter]
    public Func<TItem, string> CellBorderColor { get; set; } = _ => "tomato";

    [Parameter]
    public EventCallback<TItem> OnItemClick { get; set; }   

    private string SplicingCellClass()
    {
        var _class = "m-honeycomb-cell";
        if (CellFront != null)
        {
            _class += " m-honeycomb-hover-cell";
        }
        return _class;
    }

    private async Task OnClickHandler(TItem item)
    {
        if (OnItemClick.HasDelegate)
        {
            await OnItemClick.InvokeAsync(item);
        }
    }
}