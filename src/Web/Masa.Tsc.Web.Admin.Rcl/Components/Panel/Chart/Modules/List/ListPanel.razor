@inherits TscComponentBase

<DynamicComponent Type="@CurrentComponentModule.ShowType" Parameters=CurrentComponentModule.Metadata />

@code {

    [Parameter]
    public ITablePanelValue Value { get; set; }

    ListTypes? OldListType { get; set; }

    Dictionary<ListTypes, DynamicComponentDescription> ComponentModuleMap { get; set; }

    DynamicComponentDescription CurrentComponentModule => ComponentModuleMap[Value.ListType];

    protected override void OnInitialized()
    {
        ComponentModuleMap = new()
        {
            [ListTypes.ServiceList] = new(typeof(ServiceList), new() { ["Value"] = Value }),
            [ListTypes.InstanceList] = new(typeof(InstanceList), new() { ["Value"] = Value }),
            [ListTypes.EndpointList] = new(typeof(EndpointList), new() { ["Value"] = Value }),
            [ListTypes.TopList] = new(typeof(TopList), new() { ["Value"] = Value })
        };
    }

    protected override async Task OnParametersSetAsync()
    {
        if (OldListType != Value.ListType)
        {
            OldListType = Value.ListType;
            await GetServiceNames();
        }
    }

    async Task GetServiceNames()
    {
        await base.ApiCaller.MetricService.GetValues(new RequestMetricListDto()
        {
                Type = Value.ListType.ToString()
        });
    }
}
