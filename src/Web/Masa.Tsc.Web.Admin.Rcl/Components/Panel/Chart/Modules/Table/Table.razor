<MCard Height="410" Class="d-flex flex-column">
    <MCardTitle>
        <MLabel Class="emphasis2--text h6">@Value.Title</MLabel>
    </MCardTitle>
    <MCardText Class="flex-grow-1" Style="overflow-y: auto;">
        <MSimpleTable>
            @if (Value.ShowTableHeader)
            {
                <thead>
                    <tr>
                        <th class="text-left">
                            Name
                        </th>
                        <th class="text-left">
                            Calories
                        </th>
                        @foreach (var field in Value.Metrics)
                        {
                            <th class="text-left">
                                @(string.IsNullOrWhiteSpace(field.Unit) ? @field.Name : $"{@field.Name}({field.Unit})")
                            </th>
                        }
                    </tr>
                </thead>
            }
            <tbody>
                @foreach (var item in _desserts)
                {
                    <tr @key="item.Name">
                        <td class="@($"text-{Value.ColumnAlignment}")">@item.Name</td>
                        <td class="@($"text-{Value.ColumnAlignment}")">@item.Calories</td>
                        @foreach (var field in Value.Metrics)
                        {
                            <td style="color:@field.Color" class="@($"text-{Value.ColumnAlignment}")">0.0</td>
                        }
                    </tr>
                }
            </tbody>
            @if (Value.ShowTableFooter)
            {
                <tfoot>
                    <tr>
                        <td>Sum</td>
                        <td>$180</td>
                    </tr>
                </tfoot>
            }
        </MSimpleTable>
        @if (Value.EnablePaginaton)
        {
            <MPagination Length="10" TotalVisible="5"></MPagination>
        }
    </MCardText>
</MCard>

<MCard Class="mt-6">
    <MCardText>
        <MRow>
            <MCol Md="6">
                <SSelect @bind-Value="@Value.SystemIdentity" Items="_systemIdentities"
                         ItemText="item => item"
                         ItemValue="item => item" />
            </MCol>
            <MCol Md="6">
                <STextField @bind-Value="@Value.Title" Label="Title" />
            </MCol>
            <MCol Md="12">
                <TableFieldMetrics @bind-Items="Value.Metrics" />
            </MCol>
        </MRow>
    </MCardText>
</MCard>

@code {
    [Parameter]
    public ITablePanelValue Value { get; set; }

    private List<string> _systemIdentities = new List<string>();

    public void StateUpdated()
    {
        StateHasChanged();
    }

    public class Dessert
    {
        public string Name { get; set; }

        public int Calories { get; set; }
    }

    private List<Dessert> _desserts = new List<Dessert>
        {
           new Dessert
           {
              Name= "Frozen Yogurt",
              Calories= 159
            },
            new Dessert
            {
              Name= "Ice cream sandwich",
              Calories= 237
            },
            new Dessert
            {
              Name= "Eclair",
              Calories= 262
            },
            new Dessert
            {
              Name= "Cupcake",
              Calories= 305
            },
            new Dessert
            {
                Name= "Gingerbread",
                Calories= 356
            },
            new Dessert
            {
                Name= "Jelly bean",
                Calories= 375
            },
            new Dessert
            {
                Name= "Lollipop",
                Calories= 392
            }
        };
}
