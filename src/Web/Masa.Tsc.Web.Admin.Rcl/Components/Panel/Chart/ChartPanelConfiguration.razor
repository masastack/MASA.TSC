@inherits TscComponentBase

<MRow>
    <MCol Md="12" Class="d-flex justify-end">
        <SButton Icon OnClick="GetGetMetricsAsync">
            <SIcon Tooltip="@T("Refresh")" Color="emphasis2" Size=24>mdi-refresh</SIcon>
        </SButton>
        <SButton Outlined Class="mx-4" Small BorderRadiusClass="rounded-lg" OnClick="() => Cancel()">
            取消
        </SButton>
        <SButton Small BorderRadiusClass="rounded-lg" OnClick="() => NavigateToPanelConfigurationPage()">
            应用
        </SButton>
    </MCol>
    <MCol Cols="8">
        <div style="height:410px;max-height:700px;;overflow:auto;">
            <ChartPanel @ref="ChartPanel" Value="Value" />
        </div>
        <MCard Class="mt-6">
            <MCardText>
                <MRow>
                    @if (Value.ChartType == "table")
                    {
                        <MCol Md="4">
                            <ProjectSelect @bind-Value="@Value.SystemIdentity" />
                        </MCol>
                        <MCol Md="8">
                            <MButtonGroup Value="@Value.ListType.ToString()" ValueChanged="ListTypeChanged" Mandatory>
                                <MButton Class="text-capitalize" Value="@ListTypes.ServiceList.ToString()">
                                    Service List
                                </MButton>
                                <MButton Class="text-capitalize" Value="@ListTypes.EndpointList.ToString()">
                                    Endpoint List
                                </MButton>
                                <MButton Class="text-capitalize" Value="@ListTypes.InstanceList.ToString()">
                                    Instance List
                                </MButton>
                                <MButton Class="text-capitalize" Value="ListTypes.TopList.ToString()">
                                    Top List
                                </MButton>
                            </MButtonGroup>
                        </MCol>
                    }
                    <MCol Md="4">
                        <STextField @bind-Value="@Value.Title" Label="Title" />
                    </MCol>
                    <MCol Md="8">
                        <STextField @bind-Value="@Value.Description" Label="Description" />
                    </MCol>
                    <MCol Md="12">
                        <MRow>
                            @if (Value.ChartType == "table" && Value.ListType == ListTypes.TopList)
                            {
                                <MCol Md="4">
                                    <MCard Class="pa-2" Style="background-color:#F6F8FD">
                                        <MCardText>
                                            <MRow>
                                                <MCol Md="12">
                                                    <STextField BackgroundColor="white" DebounceInterval="1000" TValue="string" Value="Value.Metrics[0].Name" ValueChanged="async value => await MetricNameChangedAsync(Value.Metrics[0],value) " Label="指标名称" />
                                                </MCol>
                                                <MCol Md="12">
                                                    <STextField BackgroundColor="white" @bind-Value="Value.Metrics[0].Range" Label="取值范围" />
                                                </MCol>
                                            </MRow>
                                        </MCardText>
                                    </MCard>
                                </MCol>
                            }
                            else
                            {
                                @foreach (var item in Value.Metrics)
                                {
                                    <MCol Md="4">
                                        <MCard Class="pa-2" Style="background-color:#F6F8FD">
                                            <MCardText>
                                                <MRow>
                                                    @if (Value.ChartType == "table")
                                                    {
                                                        <MCol Md="12">
                                                            <STextField BackgroundColor="white" @bind-Value="item.DisplayName" Label="列名" />
                                                        </MCol>
                                                    }
                                                    <MCol Md="12">
                                                        <STextField BackgroundColor="white" DebounceInterval="1000" TValue="string" Value="item.Name" ValueChanged="async value => await MetricNameChangedAsync(item,value) " Label="指标名称" />
                                                    </MCol>
                                                    <MCol Md="12">
                                                        <STextField BackgroundColor="white" @bind-Value="item.Range" Label="取值范围" />
                                                    </MCol>
                                                    @if (Value.ChartType == "table")
                                                    {
                                                        <MCol Md="12">
                                                            <STextField BackgroundColor="white" @bind-Value="item.Icon" Label="图标" />
                                                        </MCol>
                                                    }
                                                    else
                                                    {
                                                        <MCol Md="12">
                                                            <STextField BackgroundColor="white" @bind-Value="item.Caculate" Label="计算规则" />
                                                        </MCol>
                                                    }
                                                    <MCol Md="12">
                                                        <STextField BackgroundColor="white" @bind-Value="item.Unit" Label="单位" />
                                                    </MCol>
                                                </MRow>
                                            </MCardText>
                                            <MCardActions Class="d-flex justify-space-between">
                                                @if (Value.ChartType == "table")
                                                {
                                                    <SColorGroup @bind-Value="item.Color" Colors='new List<string>{"#4318FF","#05CD99","#FFB547","#37A7FF","#FF5252"}' />
                                                }
                                                else
                                                {
                                                    <MSpacer />
                                                }
                                                <MIcon OnClick="() => Remove(item)" Color="red">mdi-delete</MIcon>
                                            </MCardActions>
                                        </MCard>
                                    </MCol>
                                }
                                <MCol Md="4">
                                    <MCard Height=350 OnClick="Add" Class="d-flex justify-center align-center" Style="background-color:#F6F8FD">
                                        <MIcon XLarge>mdi-plus</MIcon>
                                    </MCard>
                                </MCol>
                            }
                        </MRow>
                    </MCol>
                </MRow>
            </MCardText>
        </MCard>
    </MCol>
    <MCol Cols="4">
        <MCard>
            <MCardText>
                <MExpansionPanels @bind-Values=_panelValues Multiple Style="z-index:auto !important;">
                    <MExpansionPanel Value="1">
                        <MExpansionPanelHeader Class="emphasis2--text h6">Visualization</MExpansionPanelHeader>
                        <MExpansionPanelContent>
                            <WidgetType @bind-Value="@Value.ChartType" />
                        </MExpansionPanelContent>
                    </MExpansionPanel>
                    @if (Value.ChartType == "table")
                    {
                        @if (_listType == "top-list")
                        {
                            <MExpansionPanel Value="2">
                                <MExpansionPanelHeader Class="emphasis2--text h6">Options</MExpansionPanelHeader>
                                <MExpansionPanelContent>
                                    <MRow>
                                        <MCol Md="12">
                                            <ButtonGroupItem @bind-Value="@Value.Desc" Label="Desc" Items='new List<string>{"auto","asc","desc"}' />
                                        </MCol>
                                        <MCol Md="12">
                                            <ColorGroupItem @bind-Value="@Value.Color" Label="Color" Items='new List<string>{"#4318FF","#05CD99","#FFB547","#37A7FF","#FF5252"}' />
                                        </MCol>
                                        <MCol Md="12">
                                            <STextField @bind-Value="@Value.MaxCount" Type="number" Label="Max Count" />
                                        </MCol>
                                    </MRow>
                                </MExpansionPanelContent>
                            </MExpansionPanel>
                        }
                        else
                        {
                            <MExpansionPanel Value="2">
                                <MExpansionPanelHeader Class="emphasis2--text h6">Options</MExpansionPanelHeader>
                                <MExpansionPanelContent>
                                    <MRow>
                                        <MCol Md="12">
                                            <SwitchItem Label="Show table header" @bind-Value="@Value.ShowTableHeader" />
                                        </MCol>
@*                                        <MCol Md="12">
                                            <SwitchItem Label="Show table footer" @bind-Value="@Value.ShowTableFooter" />
                                        </MCol>*@
                                        <MCol Md="12">
                                            <ButtonGroupItem @bind-Value="@Value.ColumnAlignment" Label="Column alignment" Items='new List<string>{"auto","left","center","right"}' />
                                        </MCol>
                                        <MCol Md="12">
                                            <SwitchItem Label="Enable pagination" @bind-Value="@Value.EnablePaginaton" />
                                        </MCol>
                                    </MRow>
                                </MExpansionPanelContent>
                            </MExpansionPanel>
                        }
                    }
                    else
                    {
                        <MExpansionPanel Value="2">
                            <MExpansionPanelHeader Class="emphasis2--text h6">Tooltip</MExpansionPanelHeader>
                            <MExpansionPanelContent>
                                <MRow>
                                    <MCol Md="12">
                                        <SwitchItem Label="Tooltip mode" @bind-Value="@Value.Tooltip.Show" />
                                    </MCol>
                                    <MCol Md="12">
                                        <ButtonGroupItem @bind-Value="@Value.Tooltip.Trigger" Label="Trigger" Items='new List<string>{"item","axis","none"}' />
                                    </MCol>
                                    <MCol Md="12">
                                        <ButtonGroupItem @bind-Value="@Value.Tooltip.RenderModel" Label="Render mode" Items='new List<string>{"html","richText"}' />
                                    </MCol>
                                    <MCol Md="12">
                                        <STextField @bind-Value="@Value.Tooltip.ClassName" Label="Class Name" TValue="string" />
                                    </MCol>
                                </MRow>
                            </MExpansionPanelContent>
                        </MExpansionPanel>
                        <MExpansionPanel Value="3">
                            <MExpansionPanelHeader Class="emphasis2--text h6">Legend</MExpansionPanelHeader>
                            <MExpansionPanelContent>
                                <MRow>
                                    <MCol Md="12">
                                        <SwitchItem Label="Legend mode" @bind-Value="@Value.Legend.Show" />
                                    </MCol>
                                    <MCol Md="12">
                                        <ButtonGroupItem @bind-Value="@Value.Legend.Type" Label="Type" Items='new List<string>{"plain","scroll"}' />
                                    </MCol>
                                    <MCol Md="12">
                                        <ButtonGroupItem @bind-Value="@Value.Legend.Orient" Label="Orient" Items='new List<string>{"horizontal","vertical"}' />
                                    </MCol>
                                    <MCol Md="12">
                                        <ButtonGroupItem @bind-Value="@Value.Legend.XPositon" Label="X Position" Items='new List<string>{"left","center","right"}' />
                                    </MCol>
                                    <MCol Md="12">
                                        <ButtonGroupItem @bind-Value="@Value.Legend.YPositon" Label="Y Position" Items='new List<string>{"top","center","bottom"}' />
                                    </MCol>
                                </MRow>
                            </MExpansionPanelContent>
                        </MExpansionPanel>
                        <MExpansionPanel Value="4">
                            <MExpansionPanelHeader Class="emphasis2--text h6">Axis</MExpansionPanelHeader>
                            <MExpansionPanelContent>
                                <SwitchItem Label="X轴" @bind-Value="@Value.XAxis.Show" />
                                <SwitchItem Label="X轴轴线" @bind-Value="@Value.XAxis.ShowLine" />
                                <SwitchItem Label="X轴刻度标签" @bind-Value="@Value.XAxis.ShowLabel" />
                                <SwitchItem Label="X轴刻度" @bind-Value="@Value.XAxis.ShowTick" />
                                <SwitchItem Label="Y轴" @bind-Value="@Value.YAxis.Show" />
                                <SwitchItem Label="Y轴轴线" @bind-Value="@Value.YAxis.ShowLine" />
                                <SwitchItem Label="Y轴刻度标签" @bind-Value="@Value.YAxis.ShowLabel" />
                                <SwitchItem Label="Y轴刻度" @bind-Value="@Value.YAxis.ShowTick" />
                            </MExpansionPanelContent>
                        </MExpansionPanel>
                        <MExpansionPanel Value="5">
                            <MExpansionPanelHeader Class="emphasis2--text h6">Toolbox</MExpansionPanelHeader>
                            <MExpansionPanelContent>
                                <MRow>
                                    <MCol Md="12">
                                        <SwitchItem Label="Toolbox mode" @bind-Value="@Value.Toolbox.Show" />
                                    </MCol>
                                    <MCol Md="12">
                                        <ButtonGroupItem @bind-Values="@Value.Toolbox.Feature" Label="Feature" Multiple Items='new List<string>{"saveAsImage","dataView","restore","dataZoom"}' />
                                    </MCol>
                                    <MCol Md="12">
                                        <ButtonGroupItem @bind-Value="@Value.Toolbox.Orient" Label="Orient" Items='new List<string>{"horizontal","vertical"}' />
                                    </MCol>
                                    <MCol Md="12">
                                        <ButtonGroupItem @bind-Value="@Value.Toolbox.XPositon" Label="X Position" Items='new List<string>{"left","center","right"}' />
                                    </MCol>
                                    <MCol Md="12">
                                        <ButtonGroupItem @bind-Value="@Value.Toolbox.YPositon" Label="Y Position" Items='new List<string>{"top","center","bottom"}' />
                                    </MCol>
                                </MRow>
                            </MExpansionPanelContent>
                        </MExpansionPanel>
                    }
                </MExpansionPanels>
            </MCardText>
        </MCard>
    </MCol>
</MRow>

<MLoading @bind-Value="IsLoading" />