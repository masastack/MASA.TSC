@namespace Masa.Tsc.Web.Admin.Rcl.Components
@inherits TscComponentBase

<MContainer Class="white">
    <MRow>
        <MCol Cols="12" Class="d-flex pa-0 ma-0 my-2 ml-2">
            <SDateTimeRangePicker Class="pa-0 ma-0 py-2 pl-3" @bind-StartTime="_start" @bind-EndTime="_end" />
            <MButton OnClick="QueryAsync" Style="min-width:20px" Class="ml-2"><MIcon Size=20>fas fa-rotate</MIcon></MButton>
        </MCol>
    </MRow>
    <MRow Class="border-gray-thcik border-gray-thcik-top">
        <MCol Cols="12" Class="pa-0 ma-0">
            <MCard Class="pa-0 ma-0">
                <MCardText Class="pa-0 ma-0 py-1 mx-2">
                    <div class="border-gray-thcik border-gray-thcik-top" style="height:40px;width:500px">
                        <SearchTextField Label="请输入内容关键词" Class="rounded-0" Color="white" @bind-Value="_queryStr" Dense Solo />
                    </div>
                    <div class="d-flex mt-3">
                        <div class="overflow-hidden border-gray-thcik border-gray-thcik-top py-1" style="height:28px">
                            <MSwitch Class="ma-0 pa-0 font-3" @bind-Value="_isWordBreak"
                                     OnChange=UpdateWordBreakAsync
                                     Label="换行" Dense>
                            </MSwitch>
                        </div>
                        <MButton Class="rounded-0" Outlined Small>时间<MIcon XSmall OnClick=UpdateSortingAsync>@(_isDesc?"mdi-menu-down":"mdi-menu-up")</MIcon></MButton>
                        <div class="overflow-hidden border-gray-thcik border-gray-thcik-top" style="height:28px">
                            <MSelect Class="rounded-0 m-0 pa-0"
                                     Items="_dicDurations"
                                     @bind-Value="_lastedDuration"
                                     TItem="KeyValuePair<int,string>"
                                     TValue="int"
                                     TItemValue="int"
                                     Dense
                                     Solo
                                     ItemText="item=>item.Value"
                                     ItemValue="item=>item.Key"
                                     OnSelectedItemUpdate=UpdateDurationAsync>
                            </MSelect>
                        </div>
                    </div>
                </MCardText>
            </MCard>
        </MCol>
    </MRow>
    <MRow Class="pb-4">
        @if (_data is null)
        {
            <MCard Width="@("100%")" Class="text-center">@_msg</MCard>
        }
        else
        {
           <MCol Class="pa-0 ma-0">
                <MVirtualScroll TItem="JsonElement" Items="_data" Class="border-gray-thcik border-gray-thcik-top overflow-y-auto overflow-x-hidden" Style="height:600px">
                    <ItemContent>
                        @{
                            var keyValues = context.ToKeyValuePairs();
                            <div class="rounded-md-4 border-gray-thcik d-flex">
                                <div class="mr-2" style="min-width:160px">@context.GetTimestamp().Format(CurrentTimeZone)</div>
                                <div class="my-1"><TscKeyValue Value=keyValues WordBreak="_isWordBreak"></TscKeyValue></div>
                            </div>
                        }
                    </ItemContent>
                </MVirtualScroll>
           </MCol>
        }
    </MRow>
    <MRow Class="d-flex justify-end">
        <MPagination Length=_totalPage TotalVisible=5 Value="_currentPage" ValueChanged=PageChangeAsync></MPagination>
    </MRow>
</MContainer>